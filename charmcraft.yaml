# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: loki-worker-k8s
type: charm
assumes:
  - k8s-api
  # Juju 3.0.3+ needed for secrets and open-port
  - juju >= 3.0.3

summary: Loki for Kubernetes clusters.
description: |
  Grafana Loki is an open source software project that provides a scalable long-term storage for Prometheus.
  This charm deploys and operates Loki on Kubernetes clusters

# TODO: Write documentation
# docs: https://discourse.charmhub.io/t/mimir-worker-k8s-index/13464
# source: https://github.com/canonical/mimir-worker-k8s-operator
# issues: https://github.com/canonical/mimir-worker-k8s-operator/issues

bases:
  - build-on:
    - name: ubuntu
      channel: "22.04"
    run-on:
    - name: ubuntu
      channel: "22.04"

parts:
  charm:
    charm-binary-python-packages:
      - "pydantic>=2"
      - "cryptography"
      - "jsonschema"

requires:
  loki-cluster:
    interface: loki_cluster
    description: |
      The requested set of roles for of the worker (this charm) is requested by
      the coordinator over relation data.
    limit: 1

  tracing:
    interface: tracing
    limit: 1
    description: |
      Enables sending traces to the tracing backend

storage:
  data:
    type: filesystem
    description: Common storage point for all components
  recovery-data:
    type: filesystem
    description: Recovery data root for all components

# The Loki coordinator has a hardcoded dependency on the mount location,
# and it relies on this path to generate the configuration.
# Any changes to this path may affect the coordinator's functionality.

containers:
  loki:
    resource: loki-image
    mounts:
      - storage: data
        location: /data
      - storage: recovery-data
        location: /recovery-data

resources:
  loki-image:
    type: oci-image
    description: OCI image for Grafana Loki
    upstream-source: docker.io/ubuntu/loki:3.0-22.04

# Based on: https://grafana.com/docs/loki/latest/get-started/deployment-modes/#simple-scalable
config:
  options:
    read:
      type: boolean
      default: false
    write:
      type: boolean
      default: false
    backend:
      type: boolean
      default: false
    all:
      type: boolean
      default: false
